{"pageProps":{"title":"Subjcts in RxJava","content":"<h1>Subjcts in RxJava</h1>\n<h2>Prerequisites</h2>\n<p>You need to know the difference between an Observable and an Observer to get the most out of this post.</p>\n<h2>What are Subjects</h2>\n<p>Subjects act both as an Observable and as an observer at the same time. Because it is an observer, it can subscribe to one or more Observables, and because it is an Observable, it can pass through the items it observes by reemitting them, and it can also emit new items. Subjects receive the next events and emit them to their subscribers.</p>\n<p><img src=\"/subjects-in-rxjava/code.png\" alt=\"Yoda sniffing the air. Caption: “I smell bacon.”\"></p>\n<h2>Types of Subjects in RxJava</h2>\n<ul>\n<li>PublishSubject</li>\n<li>BehaviorSubject</li>\n<li>ReplaySubject</li>\n<li>AsyncSubject</li>\n</ul>\n<p>In this post, we will talk about <strong>PublishSubject</strong>.</p>\n<h2>PublishSubject</h2>\n<p>You can use Publish subjects when you want new subscribers to be notified of new events that will come after they've subscribed.</p>\n<h2>Example in kotlin</h2>\n<div class=\"remark-highlight\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">// create publish Subject</span>\n<span class=\"token keyword\">val</span> publishSubject <span class=\"token operator\">=</span> PublishSubject<span class=\"token punctuation\">.</span>create<span class=\"token operator\">&#x3C;</span>String<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// send element to publish subject</span>\npublishSubject<span class=\"token punctuation\">.</span><span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event 1\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// create subscriber to publish subject</span>\n<span class=\"token keyword\">val</span> subscriber1 <span class=\"token operator\">=</span> publishSubject<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeBy</span><span class=\"token punctuation\">(</span>\n        onNext <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"subscriber 1 <span class=\"token interpolation variable\">$it</span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// send element to publish subject</span>\npublishSubject<span class=\"token punctuation\">.</span><span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event 2\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// create another subscriber to publish subject</span>\n<span class=\"token keyword\">val</span> subscriber2 <span class=\"token operator\">=</span> publishSubject<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeBy</span><span class=\"token punctuation\">(</span>\n        onNext <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"subscriber 2 <span class=\"token interpolation variable\">$it</span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// send element to publish subject</span>\npublishSubject<span class=\"token punctuation\">.</span><span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event 3\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// dispose subscriber1</span>\nsubscriber1<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// send element to publish subject</span>\npublishSubject<span class=\"token punctuation\">.</span><span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event 4\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// send complete event to terminates publish subject observable sequence</span>\npublishSubject<span class=\"token punctuation\">.</span><span class=\"token function\">onComplete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//dispose subscriber2 because there is no more events will come for it</span>\nsubscriber2<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>The output will be:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">subscriber 1 event 2\nsubscriber 1 event 3\nsubscriber 2 event 3\nsubscriber 2 event 4</code></pre></div>\n<p>That's it for PublishSubject, I hope you've learned something new, please drop me a comment if you didn't understand something, I also love to hear suggestions for improving, so if you have any, please drop me a comment.</p>\n"},"__N_SSG":true}